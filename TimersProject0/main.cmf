%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta> <reloc>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$main.obj
cinit CODE 0 A90 A90 32 1 2
intcode_body CODE 0 B2A B2A 1A 1 2
text0 CODE 0 99C 99C 60 1 2
text1 CODE 0 AC2 AC2 26 1 2
text2 CODE 0 B0E B0E 1C 1 2
text3 CODE 0 A56 A56 3A 1 2
text4 CODE 0 806 806 A2 1 2
text5 CODE 0 B44 B44 C 1 2
text6 CODE 0 AE8 AE8 26 1 2
text7 CODE 0 9FC 9FC 5A 1 2
text8 CODE 0 92C 92C 70 1 2
text9 CODE 0 8A8 8A8 84 1 2
idataCOMRAM CODE 0 B50 B50 2 1 1
cstackCOMRAM COMRAM 1 1 1 10 1 1
temp COMRAM 1 1B 1B 1 1 1
intcode CODE 0 8 8 6 1 2
smallconst SMALLCONST 0 800 800 6 1 2
dataCOMRAM COMRAM 1 19 19 2 1 1
bssCOMRAM COMRAM 1 11 11 8 1 1
config CONFIG 4 300000 300000 4 1 1
$startup.obj
init CODE 0 E E 4 1 2
reset_vec CODE 0 0 0 4 1 2
config CONFIG 4 300000 300000 4 1 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 60-7FF 1
SFR F60-FFF 1
BANK0 60-FF 1
BANK1 100-1FF 1
BANK2 200-2FF 1
BANK3 300-3FF 1
BANK4 400-4FF 1
BANK5 500-5FF 1
BANK6 600-6FF 1
BANK7 700-7FF 1
CONST 4-7 1
CONST 12-7FF 1
CONST B52-7FFF 1
IDLOC 200000-200007 1
SMALLCONST B52-7FFF 1
CODE 4-7 1
CODE 12-7FF 1
CODE B52-7FFF 1
BIGRAM 1C-7FF 1
BIGSFR F60-FFF 1
COMRAM 1C-5F 1
CONFIG 300004-30000D 1
EEDATA F00000-F000FF 1
MEDIUMCONST B52-7FFF 1
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$main.obj
8 intcode CODE >2482:/home/lucas/PIC/C/TimersProject0/main.as
8 intcode CODE >79:/home/lucas/PIC/C/TimersProject0/main.c
B2A intcode_body CODE >79:/home/lucas/PIC/C/TimersProject0/main.c
B2C intcode_body CODE >81:/home/lucas/PIC/C/TimersProject0/main.c
B32 intcode_body CODE >82:/home/lucas/PIC/C/TimersProject0/main.c
B3A intcode_body CODE >83:/home/lucas/PIC/C/TimersProject0/main.c
B3C intcode_body CODE >84:/home/lucas/PIC/C/TimersProject0/main.c
B40 intcode_body CODE >88:/home/lucas/PIC/C/TimersProject0/main.c
8A8 text9 CODE >7:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
8A8 text9 CODE >13:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
8AC text9 CODE >14:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
8B0 text9 CODE >15:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
8B8 text9 CODE >16:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
8BC text9 CODE >18:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
8C0 text9 CODE >19:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
8C8 text9 CODE >20:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
8CC text9 CODE >22:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
8D4 text9 CODE >23:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
8DC text9 CODE >24:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
8E0 text9 CODE >25:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
8E2 text9 CODE >26:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
8E8 text9 CODE >27:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
8EA text9 CODE >25:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
8EE text9 CODE >30:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
8F4 text9 CODE >31:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
900 text9 CODE >32:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
908 text9 CODE >33:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
90A text9 CODE >35:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
910 text9 CODE >36:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
914 text9 CODE >38:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
91A text9 CODE >39:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
922 text9 CODE >40:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
92A text9 CODE >41:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awdiv.c
92C text8 CODE >7:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
92C text8 CODE >12:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
930 text8 CODE >13:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
934 text8 CODE >14:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
93C text8 CODE >15:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
940 text8 CODE >17:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
944 text8 CODE >18:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
94C text8 CODE >19:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
954 text8 CODE >20:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
958 text8 CODE >21:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
95A text8 CODE >22:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
960 text8 CODE >23:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
962 text8 CODE >21:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
966 text8 CODE >26:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
972 text8 CODE >27:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
97A text8 CODE >28:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
980 text8 CODE >29:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
984 text8 CODE >31:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
98A text8 CODE >32:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
992 text8 CODE >33:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
99A text8 CODE >34:/opt/microchip/xc8/v2.45/pic/sources/c90/common/awmod.c
9FC text7 CODE >1:/home/lucas/PIC/C/TimersProject0/Libs/Conversions/conversions.c
9FC text7 CODE >3:/home/lucas/PIC/C/TimersProject0/Libs/Conversions/conversions.c
A04 text7 CODE >5:/home/lucas/PIC/C/TimersProject0/Libs/Conversions/conversions.c
A0C text7 CODE >6:/home/lucas/PIC/C/TimersProject0/Libs/Conversions/conversions.c
A2E text7 CODE >7:/home/lucas/PIC/C/TimersProject0/Libs/Conversions/conversions.c
A4A text7 CODE >5:/home/lucas/PIC/C/TimersProject0/Libs/Conversions/conversions.c
AE8 text6 CODE >8:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
AE8 text6 CODE >9:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
AEA text6 CODE >10:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
AFA text6 CODE >11:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
AFC text6 CODE >12:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
B0C text6 CODE >13:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
B44 text5 CODE >15:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
B44 text5 CODE >16:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
B46 text5 CODE >17:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
B4A text5 CODE >18:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
B4E text5 CODE >19:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
806 text4 CODE >21:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
806 text4 CODE >22:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
832 text4 CODE >24:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
834 text4 CODE >25:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
83E text4 CODE >26:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
86C text4 CODE >27:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
870 text4 CODE >25:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
A56 text3 CODE >33:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
A56 text3 CODE >34:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
A5A text3 CODE >35:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
A5E text3 CODE >37:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
A62 text3 CODE >38:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
A66 text3 CODE >40:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
A76 text3 CODE >42:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
A82 text3 CODE >43:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
A8E text3 CODE >47:/home/lucas/PIC/C/TimersProject0/Libs/LCD/lcd.c
B0E text2 CODE >61:/home/lucas/PIC/C/TimersProject0/main.c
B0E text2 CODE >62:/home/lucas/PIC/C/TimersProject0/main.c
B10 text2 CODE >63:/home/lucas/PIC/C/TimersProject0/main.c
B12 text2 CODE >64:/home/lucas/PIC/C/TimersProject0/main.c
B14 text2 CODE >65:/home/lucas/PIC/C/TimersProject0/main.c
B16 text2 CODE >66:/home/lucas/PIC/C/TimersProject0/main.c
B18 text2 CODE >70:/home/lucas/PIC/C/TimersProject0/main.c
B20 text2 CODE >71:/home/lucas/PIC/C/TimersProject0/main.c
B22 text2 CODE >72:/home/lucas/PIC/C/TimersProject0/main.c
B24 text2 CODE >73:/home/lucas/PIC/C/TimersProject0/main.c
B26 text2 CODE >74:/home/lucas/PIC/C/TimersProject0/main.c
B28 text2 CODE >76:/home/lucas/PIC/C/TimersProject0/main.c
AC2 text1 CODE >51:/home/lucas/PIC/C/TimersProject0/main.c
AC2 text1 CODE >52:/home/lucas/PIC/C/TimersProject0/main.c
AC6 text1 CODE >53:/home/lucas/PIC/C/TimersProject0/main.c
ACA text1 CODE >54:/home/lucas/PIC/C/TimersProject0/main.c
ACE text1 CODE >55:/home/lucas/PIC/C/TimersProject0/main.c
AD2 text1 CODE >56:/home/lucas/PIC/C/TimersProject0/main.c
AE2 text1 CODE >57:/home/lucas/PIC/C/TimersProject0/main.c
AE6 text1 CODE >59:/home/lucas/PIC/C/TimersProject0/main.c
99C text0 CODE >39:/home/lucas/PIC/C/TimersProject0/main.c
99C text0 CODE >40:/home/lucas/PIC/C/TimersProject0/main.c
9A0 text0 CODE >42:/home/lucas/PIC/C/TimersProject0/main.c
9B0 text0 CODE >43:/home/lucas/PIC/C/TimersProject0/main.c
9CA text0 CODE >44:/home/lucas/PIC/C/TimersProject0/main.c
9EA text0 CODE >46:/home/lucas/PIC/C/TimersProject0/main.c
9FA text0 CODE >48:/home/lucas/PIC/C/TimersProject0/main.c
A90 cinit CODE >865:/home/lucas/PIC/C/TimersProject0/main.as
A90 cinit CODE >867:/home/lucas/PIC/C/TimersProject0/main.as
A90 cinit CODE >870:/home/lucas/PIC/C/TimersProject0/main.as
A90 cinit CODE >891:/home/lucas/PIC/C/TimersProject0/main.as
A92 cinit CODE >892:/home/lucas/PIC/C/TimersProject0/main.as
A94 cinit CODE >893:/home/lucas/PIC/C/TimersProject0/main.as
A96 cinit CODE >894:/home/lucas/PIC/C/TimersProject0/main.as
A98 cinit CODE >895:/home/lucas/PIC/C/TimersProject0/main.as
A9A cinit CODE >896:/home/lucas/PIC/C/TimersProject0/main.as
A9C cinit CODE >897:/home/lucas/PIC/C/TimersProject0/main.as
A9E cinit CODE >898:/home/lucas/PIC/C/TimersProject0/main.as
AA2 cinit CODE >899:/home/lucas/PIC/C/TimersProject0/main.as
AA4 cinit CODE >900:/home/lucas/PIC/C/TimersProject0/main.as
AA8 cinit CODE >904:/home/lucas/PIC/C/TimersProject0/main.as
AAC cinit CODE >905:/home/lucas/PIC/C/TimersProject0/main.as
AAE cinit CODE >906:/home/lucas/PIC/C/TimersProject0/main.as
AAE cinit CODE >907:/home/lucas/PIC/C/TimersProject0/main.as
AB0 cinit CODE >908:/home/lucas/PIC/C/TimersProject0/main.as
AB2 cinit CODE >909:/home/lucas/PIC/C/TimersProject0/main.as
AB4 cinit CODE >915:/home/lucas/PIC/C/TimersProject0/main.as
AB4 cinit CODE >917:/home/lucas/PIC/C/TimersProject0/main.as
AB6 cinit CODE >918:/home/lucas/PIC/C/TimersProject0/main.as
AB8 cinit CODE >920:/home/lucas/PIC/C/TimersProject0/main.as
ABA cinit CODE >921:/home/lucas/PIC/C/TimersProject0/main.as
ABC cinit CODE >922:/home/lucas/PIC/C/TimersProject0/main.as
ABE cinit CODE >923:/home/lucas/PIC/C/TimersProject0/main.as
$startup.obj
E init CODE >105:/home/lucas/PIC/C/TimersProject0/startup.as
0 reset_vec CODE >70:/home/lucas/PIC/C/TimersProject0/startup.as
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
___awdiv@counter 5 0 COMRAM 1 cstackCOMRAM main.obj
__Lmediumconst 0 0 MEDIUMCONST 0 mediumconst main.obj
__Hspace_0 B52 0 ABS 0 - main.obj
__Hspace_1 1C 0 ABS 0 - main.obj
__Hspace_2 0 0 ABS 0 - main.obj
__Hspace_4 600004 0 ABS 0 - main.obj
__Hibigdata 0 0 CODE 0 ibigdata main.obj
__mediumconst 0 0 MEDIUMCONST 0 mediumconst startup.obj
__Heeprom_data 0 0 EEDATA 0 eeprom_data main.obj
__L__absolute__ 0 0 ABS 0 __absolute__ main.obj
__Lsmallconst 800 0 SMALLCONST 0 smallconst main.obj
_LATA F89 0 ABS 0 - main.obj
_LATD F8C 0 ABS 0 - main.obj
_LATE F8D 0 ABS 0 - main.obj
_TMR0 FD6 0 ABS 0 - main.obj
___sp 0 0 STACK 2 stack startup.obj
_main 99C 0 CODE 0 text0 main.obj
btemp 1B 0 COMRAM 1 temp main.obj
___stack_hi 0 0 STACK 2 stack startup.obj
___stack_lo 0 0 STACK 2 stack startup.obj
start E 0 CODE 0 init startup.obj
__HbssCOMRAM 0 0 ABS 0 bssCOMRAM main.obj
__Hpowerup E 0 CODE 0 powerup main.obj
___awmod@sign 6 0 COMRAM 1 cstackCOMRAM main.obj
_T0CONbits FD5 0 ABS 0 - main.obj
ttemp5 1C 0 COMRAM 1 temp main.obj
ttemp6 1F 0 COMRAM 1 temp main.obj
ttemp7 23 0 COMRAM 1 temp main.obj
__HdataCOMRAM 0 0 ABS 0 dataCOMRAM main.obj
__end_of_lcd_write 8A8 0 CODE 0 text4 main.obj
__accesstop 60 0 ABS 0 - startup.obj
intlevel0 0 0 CODE 0 text startup.obj
intlevel1 0 0 CODE 0 text startup.obj
intlevel2 0 0 CODE 0 text startup.obj
intlevel3 0 0 CODE 0 text startup.obj
__LbssCOMRAM 0 0 ABS 0 bssCOMRAM main.obj
_init_lcd A56 0 CODE 0 text3 main.obj
__LnvFARRAM 0 0 FARRAM 0 nvFARRAM main.obj
wtemp8 1C 0 COMRAM 1 temp main.obj
IntToStr@num C 0 COMRAM 1 cstackCOMRAM main.obj
__Hifardata 0 0 CODE 0 ifardata main.obj
___awdiv@sign 6 0 COMRAM 1 cstackCOMRAM main.obj
__Hclrtext 0 0 ABS 0 clrtext main.obj
__end_of_init_lcd A90 0 CODE 0 text3 main.obj
lcd_write@index C 0 COMRAM 1 cstackCOMRAM main.obj
__pidataCOMRAM B50 0 CODE 0 idataCOMRAM main.obj
_lcd_write 806 0 CODE 0 text4 main.obj
_ADCON1 FC1 0 ABS 0 - main.obj
___awdiv@dividend 1 0 COMRAM 1 cstackCOMRAM main.obj
___inthi_sp 0 0 STACK 2 stack startup.obj
___intlo_sp 0 0 STACK 2 stack startup.obj
__LdataCOMRAM 0 0 ABS 0 dataCOMRAM main.obj
__Hintcode_body 0 0 ABS 0 intcode_body main.obj
__Lintsave_regs 0 0 BIGRAM 1 intsave_regs main.obj
__Hmediumconst 0 0 MEDIUMCONST 0 mediumconst main.obj
__Hintcodelo E 0 CODE 0 intcodelo main.obj
___awdiv@divisor 3 0 COMRAM 1 cstackCOMRAM main.obj
__end_of___awdiv 92C 0 CODE 0 text9 main.obj
__end_of___awmod 99C 0 CODE 0 text8 main.obj
__LidataCOMRAM 0 0 ABS 0 idataCOMRAM main.obj
__end_of_isr_routine B44 0 CODE 0 intcode_body main.obj
__Lintcodelo E 0 CODE 0 intcodelo main.obj
start_initialization A90 0 CODE 0 cinit main.obj
_frequency_txt 11 0 COMRAM 1 bssCOMRAM main.obj
__HnvFARRAM 0 0 FARRAM 0 nvFARRAM main.obj
___rparam_used 1 0 ABS 0 - main.obj
isa$xinst 0 0 ABS 0 - startup.obj
__Hbank0 0 0 ABS 0 bank0 main.obj
__Hbank1 0 0 ABS 0 bank1 main.obj
__Hbank2 0 0 ABS 0 bank2 main.obj
__Hbank3 0 0 ABS 0 bank3 main.obj
__Hbank4 0 0 ABS 0 bank4 main.obj
__Hbank5 0 0 ABS 0 bank5 main.obj
__Hbank6 0 0 ABS 0 bank6 main.obj
__Hbank7 0 0 ABS 0 bank7 main.obj
__Hcinit 0 0 ABS 0 cinit main.obj
__Hconst 0 0 CONST 0 const main.obj
__Hidata 0 0 CODE 0 idata main.obj
__Hidloc 0 0 ABS 0 idloc main.obj
__Hnvbit 0 0 COMRAM 1 nvbit main.obj
__Hparam 0 0 COMRAM 1 rparam main.obj
__Hrdata 0 0 COMRAM 1 rdata main.obj
__Hstack 0 0 STACK 2 stack main.obj
__Htext0 0 0 ABS 0 text0 main.obj
__Htext1 0 0 ABS 0 text1 main.obj
__Htext2 0 0 ABS 0 text2 main.obj
__Htext3 0 0 ABS 0 text3 main.obj
__Htext4 0 0 ABS 0 text4 main.obj
__Htext5 0 0 ABS 0 text5 main.obj
__Htext6 0 0 ABS 0 text6 main.obj
__Htext7 0 0 ABS 0 text7 main.obj
__Htext8 0 0 ABS 0 text8 main.obj
__Htext9 0 0 ABS 0 text9 main.obj
__Hbigbss 0 0 BIGRAM 1 bigbss main.obj
__Hbigram 0 0 ABS 0 bigram main.obj
__Hbigsfr 0 0 ABS 0 bigsfr main.obj
__smallconst 800 0 SMALLCONST 0 smallconst startup.obj
__Hcomram 0 0 ABS 0 comram main.obj
__Hconfig 300004 0 CONFIG 4 config main.obj
_lcd_send_cmd B44 0 CODE 0 text5 main.obj
__Lbank0 0 0 ABS 0 bank0 main.obj
__Lbank1 0 0 ABS 0 bank1 main.obj
__Lbank2 0 0 ABS 0 bank2 main.obj
__Lbank3 0 0 ABS 0 bank3 main.obj
__Lbank4 0 0 ABS 0 bank4 main.obj
__Lbank5 0 0 ABS 0 bank5 main.obj
__Lbank6 0 0 ABS 0 bank6 main.obj
__Lbank7 0 0 ABS 0 bank7 main.obj
__Lcinit 0 0 ABS 0 cinit main.obj
__Lconst 0 0 CONST 0 const main.obj
__Lidata 0 0 CODE 0 idata main.obj
__Lidloc 0 0 ABS 0 idloc main.obj
__Lnvbit 0 0 COMRAM 1 nvbit main.obj
__Lparam 0 0 COMRAM 1 rparam main.obj
__Lrdata 0 0 COMRAM 1 rdata main.obj
__Lstack 0 0 STACK 2 stack main.obj
__Ltext0 0 0 ABS 0 text0 main.obj
__Ltext1 0 0 ABS 0 text1 main.obj
__Ltext2 0 0 ABS 0 text2 main.obj
__Ltext3 0 0 ABS 0 text3 main.obj
__Ltext4 0 0 ABS 0 text4 main.obj
__Ltext5 0 0 ABS 0 text5 main.obj
__Ltext6 0 0 ABS 0 text6 main.obj
__Ltext7 0 0 ABS 0 text7 main.obj
__Ltext8 0 0 ABS 0 text8 main.obj
__Ltext9 0 0 ABS 0 text9 main.obj
IntToStr@ToStr B 0 COMRAM 1 cstackCOMRAM main.obj
lcd_write@row 4 0 COMRAM 1 cstackCOMRAM main.obj
lcd_write@txt 8 0 COMRAM 1 cstackCOMRAM main.obj
__Hfarbss 0 0 FARRAM 0 farbss main.obj
IntToStr@index E 0 COMRAM 1 cstackCOMRAM main.obj
__Lintcode_body 0 0 ABS 0 intcode_body main.obj
_INTCONbits FF2 0 ABS 0 - main.obj
__Habs1 0 0 ABS 0 abs1 main.obj
__Hdata 0 0 ABS 0 data main.obj
__Hheap 0 0 HEAP 7 heap main.obj
__Hinit 12 0 CODE 0 init main.obj
__Hrbit 0 0 COMRAM 1 rbit main.obj
__Hrbss 0 0 COMRAM 1 rbss main.obj
__Htemp 1C 0 COMRAM 1 temp main.obj
__Htext 0 0 ABS 0 text main.obj
__Labs1 0 0 ABS 0 abs1 main.obj
__Ldata 0 0 ABS 0 data main.obj
__Lheap 0 0 HEAP 7 heap main.obj
__Linit E 0 CODE 0 init main.obj
__Lrbit 0 0 COMRAM 1 rbit main.obj
__Lrbss 0 0 COMRAM 1 rbss main.obj
__Ltemp 1B 0 COMRAM 1 temp main.obj
__Ltext 0 0 ABS 0 text main.obj
int$flags 1B 0 COMRAM 1 temp main.obj
__HcstackCOMRAM 0 0 ABS 0 cstackCOMRAM main.obj
__Hintret 0 0 ABS 0 intret main.obj
__Hirdata 0 0 CODE 0 irdata main.obj
__S0 B52 0 ABS 0 - main.obj
__S1 1C 0 ABS 0 - main.obj
__S4 0 0 ABS 0 - main.obj
__S5 0 0 ABS 0 - main.obj
__HidataCOMRAM 0 0 ABS 0 idataCOMRAM main.obj
__Lbigdata 0 0 BIGRAM 1 bigdata main.obj
__Hnvrram 0 0 COMRAM 1 nvrram main.obj
int_func B2A 0 CODE 0 intcode_body main.obj
__Lintentry 0 0 ABS 0 intentry main.obj
_enable_pulse AE8 0 CODE 0 text6 main.obj
__Hramtop 800 0 RAM 0 ramtop main.obj
__Hrparam 0 0 COMRAM 1 rparam main.obj
__activetblptr 2 0 ABS 0 - main.obj
__Hstruct 0 0 COMRAM 1 struct main.obj
___awmod@counter 5 0 COMRAM 1 cstackCOMRAM main.obj
__end_of_lcd_send_cmd B50 0 CODE 0 text5 main.obj
___awdiv 8A8 0 CODE 0 text9 main.obj
___awmod 92C 0 CODE 0 text8 main.obj
__pintcode_body B2A 0 CODE 0 intcode_body main.obj
__Lbigbss 0 0 BIGRAM 1 bigbss main.obj
__Lbigram 0 0 ABS 0 bigram main.obj
__Lbigsfr 0 0 ABS 0 bigsfr main.obj
IntToStr@FromInt 9 0 COMRAM 1 cstackCOMRAM main.obj
__Lcomram 0 0 ABS 0 comram main.obj
__Lconfig 0 0 CONFIG 4 config main.obj
__Lfarbss 0 0 FARRAM 0 farbss main.obj
___inthi_stack_hi 0 0 STACK 2 stack startup.obj
___inthi_stack_lo 0 0 STACK 2 stack startup.obj
__Lfardata 0 0 FARRAM 0 fardata main.obj
isa$std 1 0 ABS 0 - startup.obj
stackhi 0 0 ABS 0 - startup.obj
stacklo 0 0 ABS 0 - startup.obj
__Lintcode 8 0 CODE 0 intcode main.obj
__Lintret 0 0 ABS 0 intret main.obj
__Lirdata 0 0 CODE 0 irdata main.obj
_IntToStr 9FC 0 CODE 0 text7 main.obj
__Lspace_0 0 0 ABS 0 - main.obj
__Lspace_1 0 0 ABS 0 - main.obj
__Lspace_2 0 0 ABS 0 - main.obj
__Lspace_4 0 0 ABS 0 - main.obj
__pbssCOMRAM 11 0 COMRAM 1 bssCOMRAM main.obj
__end_of_enable_pulse B0E 0 CODE 0 text6 main.obj
__LcstackCOMRAM 0 0 ABS 0 cstackCOMRAM main.obj
__end_of_IntToStr A56 0 CODE 0 text7 main.obj
end_of_initialization AB4 0 CODE 0 cinit main.obj
__Lnvrram 0 0 COMRAM 1 nvrram main.obj
__Hintentry 0 0 ABS 0 intentry main.obj
___awdiv@quotient 7 0 COMRAM 1 cstackCOMRAM main.obj
?___awdiv 1 0 COMRAM 1 cstackCOMRAM main.obj
?___awmod 1 0 COMRAM 1 cstackCOMRAM main.obj
__Hreset_vec 4 0 CODE 0 reset_vec main.obj
___awmod@dividend 1 0 COMRAM 1 cstackCOMRAM main.obj
_frequency 19 0 COMRAM 1 dataCOMRAM main.obj
__Lramtop 800 0 RAM 0 ramtop main.obj
__Lrparam 0 0 COMRAM 1 rparam main.obj
__pcinit A90 0 CODE 0 cinit main.obj
__ptext0 99C 0 CODE 0 text0 main.obj
__ptext1 AC2 0 CODE 0 text1 main.obj
__ptext2 B0E 0 CODE 0 text2 main.obj
__ptext3 A56 0 CODE 0 text3 main.obj
__ptext4 806 0 CODE 0 text4 main.obj
__ptext5 B44 0 CODE 0 text5 main.obj
__ptext6 AE8 0 CODE 0 text6 main.obj
__ptext7 9FC 0 CODE 0 text7 main.obj
__ptext8 92C 0 CODE 0 text8 main.obj
__ptext9 8A8 0 CODE 0 text9 main.obj
__Lstruct 0 0 COMRAM 1 struct main.obj
__ramtop 800 0 RAM 0 ramtop startup.obj
__Lpowerup E 0 CODE 0 powerup main.obj
__Leeprom_data 0 0 EEDATA 0 eeprom_data main.obj
_init_timer B0E 0 CODE 0 text2 main.obj
__H__absolute__ 0 0 ABS 0 __absolute__ main.obj
__psmallconst 800 0 SMALLCONST 0 smallconst main.obj
__Lreset_vec 0 0 CODE 0 reset_vec main.obj
lcd_write@line 6 0 COMRAM 1 cstackCOMRAM main.obj
___heap_hi 0 0 ABS 0 - startup.obj
___heap_lo 0 0 ABS 0 - startup.obj
___param_bank 0 0 ABS 0 - main.obj
___intlo_stack_hi 0 0 STACK 2 stack startup.obj
___intlo_stack_lo 0 0 STACK 2 stack startup.obj
__Hbigdata 0 0 BIGRAM 1 bigdata main.obj
__end_of__initialization AB4 0 CODE 0 cinit main.obj
___awmod@divisor 3 0 COMRAM 1 cstackCOMRAM main.obj
__Libigdata 0 0 CODE 0 ibigdata main.obj
__Lclrtext 0 0 ABS 0 clrtext main.obj
__pcstackCOMRAM 1 0 COMRAM 1 cstackCOMRAM main.obj
_isr_routine 8 0 CODE 0 intcode main.obj
__end_of_main 9FC 0 CODE 0 text0 main.obj
__pintcode 8 0 CODE 0 intcode main.obj
_T0CON FD5 0 ABS 0 - main.obj
_TRISA F92 0 ABS 0 - main.obj
_TRISD F95 0 ABS 0 - main.obj
_TRISE F96 0 ABS 0 - main.obj
__end_of_setup AE8 0 CODE 0 text1 main.obj
__HRAM 0 0 ABS 0 - main.obj
__Hbss 0 0 RAM 1 bss main.obj
__Hram 0 0 ABS 0 ram main.obj
__Hsfr 0 0 ABS 0 sfr main.obj
__LRAM 1 0 ABS 0 - main.obj
__Lbss 0 0 RAM 1 bss main.obj
__Lram 0 0 ABS 0 ram main.obj
__Lsfr 0 0 ABS 0 sfr main.obj
_setup AC2 0 CODE 0 text1 main.obj
__end_of_init_timer B2A 0 CODE 0 text2 main.obj
lcd_send_cmd@cmd 2 0 COMRAM 1 cstackCOMRAM main.obj
__initialization A90 0 CODE 0 cinit main.obj
__pdataCOMRAM 19 0 COMRAM 1 dataCOMRAM main.obj
__Hfardata 0 0 FARRAM 0 fardata main.obj
__Hsmallconst 806 0 SMALLCONST 0 smallconst main.obj
__Lifardata 0 0 CODE 0 ifardata main.obj
__Hintsave_regs 0 0 BIGRAM 1 intsave_regs main.obj
__Hintcode E 0 CODE 0 intcode main.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
text4 0 806 806 34C 1
cstackCOMRAM 1 1 1 1B 1
reset_vec 0 0 0 4 1
intcode 0 8 8 A 1
smallconst 0 800 800 6 1
# %NOTES Section
# This section contains data of all the note-psects.  The beginning of the section
# is indicated by %NOTES. The first line indicates the name and decimal
# byte-length of the first note-psect, e.g.
#   $codecov_info_hdr 16
# Each line that follows contains the byte-data of the psect in hexadecimal as a
# space-separated list. These lines are limited to 16 bytes of data.
%NOTES
