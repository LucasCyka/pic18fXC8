%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta> <reloc>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$lcd.obj
cinit CODE 0 8C4 8C4 E 1 2
text0 CODE 0 8A2 8A2 22 1 2
text1 CODE 0 808 808 3A 1 2
text2 CODE 0 842 842 3A 1 2
text3 CODE 0 8D2 8D2 C 1 2
text4 CODE 0 87C 87C 26 1 2
cstackCOMRAM COMRAM 1 1 1 9 1 1
smallconst SMALLCONST 0 800 800 8 1 2
config CONFIG 4 300000 300000 4 1 1
$startup.obj
init CODE 0 0 0 4 1 2
config CONFIG 4 300000 300000 4 1 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 60-7FF 1
SFR F60-FFF 1
BANK0 60-FF 1
BANK1 100-1FF 1
BANK2 200-2FF 1
BANK3 300-3FF 1
BANK4 400-4FF 1
BANK5 500-5FF 1
BANK6 600-6FF 1
BANK7 700-7FF 1
CONST 4-7FF 1
CONST 8DE-7FFF 1
IDLOC 200000-200007 1
SMALLCONST 8DE-7FFF 1
CODE 4-7FF 1
CODE 8DE-7FFF 1
BIGRAM A-7FF 1
BIGSFR F60-FFF 1
COMRAM A-5F 1
CONFIG 300004-30000D 1
EEDATA F00000-F000FF 1
MEDIUMCONST 8DE-7FFF 1
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$lcd.obj
87C text4 CODE >33:/home/lucas/PIC/C/LCD/lcd.c
87C text4 CODE >34:/home/lucas/PIC/C/LCD/lcd.c
87E text4 CODE >35:/home/lucas/PIC/C/LCD/lcd.c
88E text4 CODE >36:/home/lucas/PIC/C/LCD/lcd.c
890 text4 CODE >37:/home/lucas/PIC/C/LCD/lcd.c
8A0 text4 CODE >38:/home/lucas/PIC/C/LCD/lcd.c
8D2 text3 CODE >40:/home/lucas/PIC/C/LCD/lcd.c
8D2 text3 CODE >41:/home/lucas/PIC/C/LCD/lcd.c
8D4 text3 CODE >42:/home/lucas/PIC/C/LCD/lcd.c
8D8 text3 CODE >43:/home/lucas/PIC/C/LCD/lcd.c
8DC text3 CODE >44:/home/lucas/PIC/C/LCD/lcd.c
842 text2 CODE >56:/home/lucas/PIC/C/LCD/lcd.c
842 text2 CODE >57:/home/lucas/PIC/C/LCD/lcd.c
846 text2 CODE >58:/home/lucas/PIC/C/LCD/lcd.c
84A text2 CODE >60:/home/lucas/PIC/C/LCD/lcd.c
84E text2 CODE >61:/home/lucas/PIC/C/LCD/lcd.c
852 text2 CODE >63:/home/lucas/PIC/C/LCD/lcd.c
862 text2 CODE >65:/home/lucas/PIC/C/LCD/lcd.c
86E text2 CODE >66:/home/lucas/PIC/C/LCD/lcd.c
87A text2 CODE >70:/home/lucas/PIC/C/LCD/lcd.c
808 text1 CODE >46:/home/lucas/PIC/C/LCD/lcd.c
808 text1 CODE >47:/home/lucas/PIC/C/LCD/lcd.c
80A text1 CODE >48:/home/lucas/PIC/C/LCD/lcd.c
814 text1 CODE >49:/home/lucas/PIC/C/LCD/lcd.c
824 text1 CODE >50:/home/lucas/PIC/C/LCD/lcd.c
828 text1 CODE >48:/home/lucas/PIC/C/LCD/lcd.c
8A2 text0 CODE >74:/home/lucas/PIC/C/LCD/lcd.c
8A2 text0 CODE >75:/home/lucas/PIC/C/LCD/lcd.c
8A6 text0 CODE >77:/home/lucas/PIC/C/LCD/lcd.c
8AA text0 CODE >78:/home/lucas/PIC/C/LCD/lcd.c
8C2 text0 CODE >79:/home/lucas/PIC/C/LCD/lcd.c
8C2 text0 CODE >81:/home/lucas/PIC/C/LCD/lcd.c
8C4 cinit CODE >498:/home/lucas/PIC/C/LCD/lcd.as
8C4 cinit CODE >500:/home/lucas/PIC/C/LCD/lcd.as
8C4 cinit CODE >503:/home/lucas/PIC/C/LCD/lcd.as
8C4 cinit CODE >509:/home/lucas/PIC/C/LCD/lcd.as
8C4 cinit CODE >512:/home/lucas/PIC/C/LCD/lcd.as
8C6 cinit CODE >513:/home/lucas/PIC/C/LCD/lcd.as
8C8 cinit CODE >514:/home/lucas/PIC/C/LCD/lcd.as
8CA cinit CODE >515:/home/lucas/PIC/C/LCD/lcd.as
8CC cinit CODE >516:/home/lucas/PIC/C/LCD/lcd.as
8CE cinit CODE >517:/home/lucas/PIC/C/LCD/lcd.as
$startup.obj
0 init CODE >102:/home/lucas/PIC/C/LCD/startup.as
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
__Lmediumconst 0 0 MEDIUMCONST 0 mediumconst lcd.obj
__Hspace_0 8DE 0 ABS 0 - lcd.obj
__Hspace_1 A 0 ABS 0 - lcd.obj
__Hspace_2 0 0 ABS 0 - lcd.obj
__Hspace_4 600004 0 ABS 0 - lcd.obj
__Hibigdata 0 0 CODE 0 ibigdata lcd.obj
__mediumconst 0 0 MEDIUMCONST 0 mediumconst startup.obj
__Heeprom_data 0 0 EEDATA 0 eeprom_data lcd.obj
__L__absolute__ 0 0 ABS 0 __absolute__ lcd.obj
__Lsmallconst 800 0 SMALLCONST 0 smallconst lcd.obj
_LATD F8C 0 ABS 0 - lcd.obj
_LATE F8D 0 ABS 0 - lcd.obj
___sp 0 0 STACK 2 stack startup.obj
_main 8A2 0 CODE 0 text0 lcd.obj
___stack_hi 0 0 STACK 2 stack startup.obj
___stack_lo 0 0 STACK 2 stack startup.obj
start 0 0 CODE 0 init startup.obj
__Hpowerup 0 0 CODE 0 powerup lcd.obj
__end_of_lcd_write 842 0 CODE 0 text1 lcd.obj
__accesstop 60 0 ABS 0 - startup.obj
intlevel0 0 0 CODE 0 text startup.obj
intlevel1 0 0 CODE 0 text startup.obj
intlevel2 0 0 CODE 0 text startup.obj
intlevel3 0 0 CODE 0 text startup.obj
_init_lcd 842 0 CODE 0 text2 lcd.obj
__LnvFARRAM 0 0 FARRAM 0 nvFARRAM lcd.obj
__Hifardata 0 0 CODE 0 ifardata lcd.obj
__Hclrtext 0 0 ABS 0 clrtext lcd.obj
__end_of_init_lcd 87C 0 CODE 0 text2 lcd.obj
lcd_write@index 8 0 COMRAM 1 cstackCOMRAM lcd.obj
_lcd_write 808 0 CODE 0 text1 lcd.obj
_ADCON1 FC1 0 ABS 0 - lcd.obj
___inthi_sp 0 0 STACK 2 stack startup.obj
___intlo_sp 0 0 STACK 2 stack startup.obj
__Hintcode_body 0 0 ABS 0 intcode_body lcd.obj
__Lintsave_regs 0 0 BIGRAM 1 intsave_regs lcd.obj
__Hmediumconst 0 0 MEDIUMCONST 0 mediumconst lcd.obj
__Hintcodelo 0 0 CODE 0 intcodelo lcd.obj
__Lintcodelo 0 0 CODE 0 intcodelo lcd.obj
start_initialization 8C4 0 CODE 0 cinit lcd.obj
__HnvFARRAM 0 0 FARRAM 0 nvFARRAM lcd.obj
___rparam_used 1 0 ABS 0 - lcd.obj
isa$xinst 0 0 ABS 0 - startup.obj
__Hbank0 0 0 ABS 0 bank0 lcd.obj
__Hbank1 0 0 ABS 0 bank1 lcd.obj
__Hbank2 0 0 ABS 0 bank2 lcd.obj
__Hbank3 0 0 ABS 0 bank3 lcd.obj
__Hbank4 0 0 ABS 0 bank4 lcd.obj
__Hbank5 0 0 ABS 0 bank5 lcd.obj
__Hbank6 0 0 ABS 0 bank6 lcd.obj
__Hbank7 0 0 ABS 0 bank7 lcd.obj
__Hcinit 0 0 ABS 0 cinit lcd.obj
__Hconst 0 0 CONST 0 const lcd.obj
__Hidata 0 0 CODE 0 idata lcd.obj
__Hidloc 0 0 ABS 0 idloc lcd.obj
__Hnvbit 0 0 COMRAM 1 nvbit lcd.obj
__Hparam 0 0 COMRAM 1 rparam lcd.obj
__Hrdata 0 0 COMRAM 1 rdata lcd.obj
__Hstack 0 0 STACK 2 stack lcd.obj
__Htext0 0 0 ABS 0 text0 lcd.obj
__Htext1 0 0 ABS 0 text1 lcd.obj
__Htext2 0 0 ABS 0 text2 lcd.obj
__Htext3 0 0 ABS 0 text3 lcd.obj
__Htext4 0 0 ABS 0 text4 lcd.obj
__Hbigbss 0 0 BIGRAM 1 bigbss lcd.obj
__Hbigram 0 0 ABS 0 bigram lcd.obj
__Hbigsfr 0 0 ABS 0 bigsfr lcd.obj
__smallconst 800 0 SMALLCONST 0 smallconst startup.obj
__Hcomram 0 0 ABS 0 comram lcd.obj
__Hconfig 300004 0 CONFIG 4 config lcd.obj
_lcd_send_cmd 8D2 0 CODE 0 text3 lcd.obj
__Lbank0 0 0 ABS 0 bank0 lcd.obj
__Lbank1 0 0 ABS 0 bank1 lcd.obj
__Lbank2 0 0 ABS 0 bank2 lcd.obj
__Lbank3 0 0 ABS 0 bank3 lcd.obj
__Lbank4 0 0 ABS 0 bank4 lcd.obj
__Lbank5 0 0 ABS 0 bank5 lcd.obj
__Lbank6 0 0 ABS 0 bank6 lcd.obj
__Lbank7 0 0 ABS 0 bank7 lcd.obj
__Lcinit 0 0 ABS 0 cinit lcd.obj
__Lconst 0 0 CONST 0 const lcd.obj
__Lidata 0 0 CODE 0 idata lcd.obj
__Lidloc 0 0 ABS 0 idloc lcd.obj
__Lnvbit 0 0 COMRAM 1 nvbit lcd.obj
__Lparam 0 0 COMRAM 1 rparam lcd.obj
__Lrdata 0 0 COMRAM 1 rdata lcd.obj
__Lstack 0 0 STACK 2 stack lcd.obj
__Ltext0 0 0 ABS 0 text0 lcd.obj
__Ltext1 0 0 ABS 0 text1 lcd.obj
__Ltext2 0 0 ABS 0 text2 lcd.obj
__Ltext3 0 0 ABS 0 text3 lcd.obj
__Ltext4 0 0 ABS 0 text4 lcd.obj
lcd_write@row 2 0 COMRAM 1 cstackCOMRAM lcd.obj
lcd_write@txt 6 0 COMRAM 1 cstackCOMRAM lcd.obj
__Hfarbss 0 0 FARRAM 0 farbss lcd.obj
__Lintcode_body 0 0 ABS 0 intcode_body lcd.obj
__Habs1 0 0 ABS 0 abs1 lcd.obj
__Hdata 0 0 ABS 0 data lcd.obj
__Hheap 0 0 HEAP 7 heap lcd.obj
__Hinit 4 0 CODE 0 init lcd.obj
__Hrbit 0 0 COMRAM 1 rbit lcd.obj
__Hrbss 0 0 COMRAM 1 rbss lcd.obj
__Htemp 0 0 COMRAM 1 temp lcd.obj
__Htext 0 0 ABS 0 text lcd.obj
__Labs1 0 0 ABS 0 abs1 lcd.obj
__Ldata 0 0 ABS 0 data lcd.obj
__Lheap 0 0 HEAP 7 heap lcd.obj
__Linit 0 0 CODE 0 init lcd.obj
__Lrbit 0 0 COMRAM 1 rbit lcd.obj
__Lrbss 0 0 COMRAM 1 rbss lcd.obj
__Ltemp 0 0 COMRAM 1 temp lcd.obj
__Ltext 0 0 ABS 0 text lcd.obj
__HcstackCOMRAM 0 0 ABS 0 cstackCOMRAM lcd.obj
__Hintret 0 0 ABS 0 intret lcd.obj
__Hirdata 0 0 CODE 0 irdata lcd.obj
__S0 8DE 0 ABS 0 - lcd.obj
__S1 A 0 ABS 0 - lcd.obj
__S4 0 0 ABS 0 - lcd.obj
__S5 0 0 ABS 0 - lcd.obj
__Lbigdata 0 0 BIGRAM 1 bigdata lcd.obj
__Hnvrram 0 0 COMRAM 1 nvrram lcd.obj
__Lintentry 0 0 ABS 0 intentry lcd.obj
_enable_pulse 87C 0 CODE 0 text4 lcd.obj
__Hramtop 800 0 RAM 0 ramtop lcd.obj
__Hrparam 0 0 COMRAM 1 rparam lcd.obj
__activetblptr 1 0 ABS 0 - lcd.obj
__Hstruct 0 0 COMRAM 1 struct lcd.obj
__end_of_lcd_send_cmd 8DE 0 CODE 0 text3 lcd.obj
__Lbigbss 0 0 BIGRAM 1 bigbss lcd.obj
__Lbigram 0 0 ABS 0 bigram lcd.obj
__Lbigsfr 0 0 ABS 0 bigsfr lcd.obj
__Lcomram 0 0 ABS 0 comram lcd.obj
__Lconfig 0 0 CONFIG 4 config lcd.obj
__Lfarbss 0 0 FARRAM 0 farbss lcd.obj
___inthi_stack_hi 0 0 STACK 2 stack startup.obj
___inthi_stack_lo 0 0 STACK 2 stack startup.obj
__Lfardata 0 0 FARRAM 0 fardata lcd.obj
isa$std 1 0 ABS 0 - startup.obj
stackhi 0 0 ABS 0 - startup.obj
stacklo 0 0 ABS 0 - startup.obj
__Lintcode 0 0 CODE 0 intcode lcd.obj
__Lintret 0 0 ABS 0 intret lcd.obj
__Lirdata 0 0 CODE 0 irdata lcd.obj
__Lspace_0 0 0 ABS 0 - lcd.obj
__Lspace_1 0 0 ABS 0 - lcd.obj
__Lspace_2 0 0 ABS 0 - lcd.obj
__Lspace_4 0 0 ABS 0 - lcd.obj
__end_of_enable_pulse 8A2 0 CODE 0 text4 lcd.obj
__LcstackCOMRAM 0 0 ABS 0 cstackCOMRAM lcd.obj
end_of_initialization 8C4 0 CODE 0 cinit lcd.obj
__Lnvrram 0 0 COMRAM 1 nvrram lcd.obj
__Hintentry 0 0 ABS 0 intentry lcd.obj
__Hreset_vec 0 0 CODE 0 reset_vec lcd.obj
__Lramtop 800 0 RAM 0 ramtop lcd.obj
__Lrparam 0 0 COMRAM 1 rparam lcd.obj
__pcinit 8C4 0 CODE 0 cinit lcd.obj
__ptext0 8A2 0 CODE 0 text0 lcd.obj
__ptext1 808 0 CODE 0 text1 lcd.obj
__ptext2 842 0 CODE 0 text2 lcd.obj
__ptext3 8D2 0 CODE 0 text3 lcd.obj
__ptext4 87C 0 CODE 0 text4 lcd.obj
__Lstruct 0 0 COMRAM 1 struct lcd.obj
__ramtop 800 0 RAM 0 ramtop startup.obj
__Lpowerup 0 0 CODE 0 powerup lcd.obj
__Leeprom_data 0 0 EEDATA 0 eeprom_data lcd.obj
__H__absolute__ 0 0 ABS 0 __absolute__ lcd.obj
__psmallconst 800 0 SMALLCONST 0 smallconst lcd.obj
__Lreset_vec 0 0 CODE 0 reset_vec lcd.obj
lcd_write@line 4 0 COMRAM 1 cstackCOMRAM lcd.obj
___heap_hi 0 0 ABS 0 - startup.obj
___heap_lo 0 0 ABS 0 - startup.obj
___param_bank 0 0 ABS 0 - lcd.obj
___intlo_stack_hi 0 0 STACK 2 stack startup.obj
___intlo_stack_lo 0 0 STACK 2 stack startup.obj
__Hbigdata 0 0 BIGRAM 1 bigdata lcd.obj
__end_of__initialization 8C4 0 CODE 0 cinit lcd.obj
__Libigdata 0 0 CODE 0 ibigdata lcd.obj
__Lclrtext 0 0 ABS 0 clrtext lcd.obj
__pcstackCOMRAM 1 0 COMRAM 1 cstackCOMRAM lcd.obj
__end_of_main 8C4 0 CODE 0 text0 lcd.obj
_TRISD F95 0 ABS 0 - lcd.obj
_TRISE F96 0 ABS 0 - lcd.obj
__HRAM 0 0 ABS 0 - lcd.obj
__Hbss 0 0 RAM 1 bss lcd.obj
__Hram 0 0 ABS 0 ram lcd.obj
__Hsfr 0 0 ABS 0 sfr lcd.obj
__LRAM 1 0 ABS 0 - lcd.obj
__Lbss 0 0 RAM 1 bss lcd.obj
__Lram 0 0 ABS 0 ram lcd.obj
__Lsfr 0 0 ABS 0 sfr lcd.obj
lcd_send_cmd@cmd 2 0 COMRAM 1 cstackCOMRAM lcd.obj
__initialization 8C4 0 CODE 0 cinit lcd.obj
__Hfardata 0 0 FARRAM 0 fardata lcd.obj
__Hsmallconst 808 0 SMALLCONST 0 smallconst lcd.obj
__Lifardata 0 0 CODE 0 ifardata lcd.obj
__Hintsave_regs 0 0 BIGRAM 1 intsave_regs lcd.obj
__Hintcode 0 0 CODE 0 intcode lcd.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
text1 0 808 808 D6 1
cstackCOMRAM 1 1 1 9 1
reset_vec 0 0 0 4 1
smallconst 0 800 800 8 1
# %NOTES Section
# This section contains data of all the note-psects.  The beginning of the section
# is indicated by %NOTES. The first line indicates the name and decimal
# byte-length of the first note-psect, e.g.
#   $codecov_info_hdr 16
# Each line that follows contains the byte-data of the psect in hexadecimal as a
# space-separated list. These lines are limited to 16 bytes of data.
%NOTES
